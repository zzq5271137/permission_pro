<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycomp.mapper.EmployeeMapper">

    <resultMap id="BaseResultMap" type="com.mycomp.domain.Employee">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="inputtime" jdbcType="TIMESTAMP" property="inputtime"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="state" jdbcType="BIT" property="state"/>
        <result column="admin" jdbcType="BIT" property="admin"/>

        <association property="department" javaType="com.mycomp.domain.Department"
                     columnPrefix="d_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>

    <select id="selectAll" resultMap="BaseResultMap">
        select e.id,
               e.username,
               e.password,
               e.inputtime,
               e.tel,
               e.email,
               e.state,
               e.admin,
               d.id   as d_id,
               d.name as d_name
        from employee as e
                 left join department d on e.dep_id = d.id
    </select>

    <insert id="insert" parameterType="com.mycomp.domain.Employee">
        insert into employee (id, username, password, inputtime,
                              tel, email, state, admin,
                              dep_id)
        values (#{id}, #{username}, #{password}, #{inputtime},
                #{tel}, #{email}, #{state}, #{admin},
                #{department.id})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.mycomp.domain.Employee">
        update employee
        set username  = #{username},
            password  = #{password},
            inputtime = #{inputtime},
            tel       = #{tel},
            email     = #{email},
            state     = #{state},
            admin     = #{admin},
            dep_id    = #{department.id}
        where id = #{id}
    </update>

    <update id="softDeleteByPrimaryKey">
        update employee
        set state = false
        where id = #{id}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select e.id,
               e.username,
               e.password,
               e.inputtime,
               e.tel,
               e.email,
               e.state,
               e.admin,
               d.id   as d_id,
               d.name as d_name
        from employee as e
                 left join department d on e.dep_id = d.id
        where e.id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from employee
        where id = #{id,jdbcType=BIGINT}
    </delete>

</mapper>